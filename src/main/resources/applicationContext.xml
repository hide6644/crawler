<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

    <!-- ========================= GENERAL DEFINITIONS ========================= -->

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
                <value>classpath:mail.properties</value>
            </list>
        </property>
    </bean>

    <!-- ========================= RESOURCE DEFINITIONS ========================= -->

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>applicationResources</value>
            </list>
        </property>
    </bean>

    <!-- Activates scanning of @Autowired -->
    <context:annotation-config />

    <!-- Activates scanning of @Service -->
    <context:component-scan base-package="crawler.dao,crawler.service,crawler.batch" />

    <!-- Enable @Transactional support -->
    <tx:annotation-driven />

    <!-- =========================== DAO DEFINITIONS ============================ -->

    <bean class="org.springframework.orm.hibernate5.HibernateExceptionTranslator" />
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean" destroy-method="destroy">
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.connection.provider_class">org.hibernate.hikaricp.internal.HikariCPConnectionProvider</prop>
                <prop key="hibernate.hikari.dataSourceClassName">${dataSource.dataSourceClassName}</prop>
                <prop key="hibernate.hikari.dataSource.url">${dataSource.url}</prop>
                <prop key="hibernate.hikari.dataSource.user">${dataSource.username}</prop>
                <prop key="hibernate.hikari.dataSource.password">${dataSource.password}</prop>
                <prop key="hibernate.hikari.dataSource.cachePrepStmts">${dataSource.cachePrepStmts}</prop>
                <prop key="hibernate.hikari.dataSource.prepStmtCacheSize">${dataSource.prepStmtCacheSize}</prop>
                <prop key="hibernate.hikari.dataSource.prepStmtCacheSqlLimit">${dataSource.prepStmtCacheSqlLimit}</prop>
                <prop key="hibernate.hikari.maximumPoolSize">${dataSource.maximumPoolSize}</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.query.substitutions">true 'Y', false 'N'</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.show_sql">false</prop>
                <!-- Hibernate Search index directory -->
                <prop key="hibernate.search.default.indexBase">#{systemProperties.app_home}/index</prop>
                <prop key="hibernate.search.default.directory_provider">filesystem</prop>
                <prop key="hibernate.search.default.locking_strategy">simple</prop>
                <prop key="hibernate.search.default.exclusive_index_use">true</prop>
                <prop key="hibernate.search.lucene_version">LUCENE_CURRENT</prop>
                <prop key="hibernate.search.worker.batch_size">100</prop>
            </props>
        </property>
        <property name="packagesToScan">
            <list>
                <value>crawler/domain</value>
            </list>
        </property>
    </bean>

    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <!-- ========================== MAIL CONFIGURATION ========================= -->

    <bean id="mailEngine" class="crawler.service.MailEngine">
        <property name="mailSender" ref="mailSender" />
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.host}" />
        <property name="defaultEncoding" value="UTF-8" />
    </bean>

    <bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage" scope="prototype">
        <property name="from" value="${mail.default.from}" />
        <property name="to" value="${mail.default.to}" />
        <property name="subject" value="${mail.default.subject}" />
    </bean>

</beans>
